{
  "address": "0x1C788fAAAC1475e737F83F358962465b1d798038",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3c2bab6c4974ae4204796daabab85517ef1b9a6721a7872b55cf923bd95b9a83",
  "receipt": {
    "to": null,
    "from": "0x9563AB3A5D92703484D813535d3f29a51D6FfeBb",
    "contractAddress": "0x1C788fAAAC1475e737F83F358962465b1d798038",
    "transactionIndex": 80,
    "gasUsed": "872219",
    "logsBloom": "0x
    "blockHash": "0x000a89df5871201bbb09bc563defc4abf7b9bdf906775b4992050df05b938f5a",
    "transactionHash": "0x3c2bab6c4974ae4204796daabab85517ef1b9a6721a7872b55cf923bd95b9a83",
    "logs": [],
    "blockNumber": 8004447,
    "cumulativeGasUsed": "18404993",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "0b9dfc4181e1d50ca4f109b46490333d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe{\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50*1e18;\\n    // 21,415 GAS - constant\\n    // 23,515 gas - non-constant\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    // function callMeRightAway(){\\n\\n    // }\\n    address public immutable i_owner;\\n    // 21,508 gas - immutable\\n    // 23,644 gas - non-immutable\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress){\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // Limit tinkering / triaging to 20 min\\n    // Take at least 15 min yourself -> or be 100% sure\\n    // you exhausted all options\\n\\n    // 1. Tinker and try to pinpoint exactly what's goint on\\n    // 2. Google the exact error\\n    // 2.5 Got to our Github repo discussions and/or updates\\n    // 3 Ask a question on a forum like Stack Exchange ETH and Stack Overlow\\n\\n    function fund() public payable{\\n        // Want to be able to set a minimum fund amount in USD\\n        // 1. How do we send ETH to this contract?\\n\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough!\\\"); //1e18 == 1*10 ** 18 == weig\\n        // 18 decimals\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        // What is reverting?\\n        // undo any action before, and send remaining gas back\\n    }\\n\\n    function Withdraw() public onlyOwner{\\n        // require(msg.sender == owner, \\\"Sender is not owner!\\\");\\n        for(uint256 idx = 0; idx < funders.length; idx++){\\n            address funder = funders[idx];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        funders = new address[](0);\\n        // actually withdraw the funds\\n\\n        // transfer\\n        // msg.sender = address\\n        // payable(msg.sender) = payable address\\n        // payable(msg.sender).transfer(address(this).balance);\\n        \\n        // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n\\n        // call\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner{\\n        // require(msg.sender==i_owner,\\\"Sender is not owner!\\\");\\n        if(msg.sender!=i_owner){revert NotOwner();}\\n        _;\\n    }\\n\\n    // What happens if someone sends this contract ETH without calling the fund function\\n\\n    receive() external payable{\\n        fund();\\n    }\\n\\n    fallback() external payable{\\n        fund();\\n    }\\n}\",\"keccak256\":\"0x61210450f5e84a014a942ae45af7c79a6834ad4db7144124bdb4ed3e56f440be\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\nlibrary PriceConverter{\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        // ABI\\r\\n        // Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\r\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        // 3000.00000000\\r\\n        return uint256(price * 1e10); // 1**10 \\r\\n    }\\r\\n\\r\\n    // function getVersion() internal view returns (uint256){\\r\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\r\\n    //     return priceFeed.version();\\r\\n    // } \\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice*ethAmount)/1e18;\\r\\n        return  ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb9616395dd5b6e1e88e4e5f3559c9d1c00df0cbfc6e57aa7166658d1c8a72047\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fce38038062000fce833981810160405281019061003491906100c7565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b6000815190506100c18161012b565b92915050565b6000602082840312156100dd576100dc610126565b5b60006100eb848285016100b2565b91505092915050565b60006100ff82610106565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610134816100f4565b811461013f57600080fd5b50565b60805160601c610e6662000168600039600081816102fe01526105710152610e666000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107be565b6102e4565b6040516100c191906109b4565b60405180910390f35b3480156100d657600080fd5b506100df6102fc565b005b3480156100ed57600080fd5b506100f661053c565b60405161010391906109b4565b60405180910390f35b34801561011857600080fd5b50610121610549565b60405161012e9190610959565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056f565b604051610163919061093e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107eb565b610593565b6040516101a0919061093e565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610994565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109eb565b92505081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610381576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042c5760008082815481106103a6576103a5610d1c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042490610c75565b915050610384565b50600067ffffffffffffffff81111561044857610447610d4b565b5b6040519080825280602002602001820160405280156104765781602001602082028036833780820191505090505b506000908051906020019061048c9291906106ae565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b390610929565b60006040518083038185875af1925050503d80600081146104f0576040519150601f19603f3d011682016040523d82523d6000602084013e6104f5565b606091505b5050905080610539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053090610974565b60405180910390fd5b50565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610b89565b6106019190610a41565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610818565b5050509150506402540be400816106a69190610a72565b915050919050565b828054828255906000526020600020908101928215610727579160200282015b828111156107265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ce565b5b5090506107349190610738565b5090565b5b80821115610751576000816000905550600101610739565b5090565b60008135905061076481610dd4565b92915050565b60008151905061077981610deb565b92915050565b60008135905061078e81610e02565b92915050565b6000815190506107a381610e02565b92915050565b6000815190506107b881610e19565b92915050565b6000602082840312156107d4576107d3610d7a565b5b60006107e284828501610755565b91505092915050565b60006020828403121561080157610800610d7a565b5b600061080f8482850161077f565b91505092915050565b600080600080600060a0868803121561083457610833610d7a565b5b6000610842888289016107a9565b95505060206108538882890161076a565b945050604061086488828901610794565b935050606061087588828901610794565b9250506080610886888289016107a9565b9150509295509295909350565b61089c81610be3565b82525050565b6108ab81610c3f565b82525050565b60006108be600b836109da565b91506108c982610d7f565b602082019050919050565b60006108e16000836109cf565b91506108ec82610da8565b600082019050919050565b60006109046013836109da565b915061090f82610dab565b602082019050919050565b61092381610c1f565b82525050565b6000610934826108d4565b9150819050919050565b60006020820190506109536000830184610893565b92915050565b600060208201905061096e60008301846108a2565b92915050565b6000602082019050818103600083015261098d816108b1565b9050919050565b600060208201905081810360008301526109ad816108f7565b9050919050565b60006020820190506109c9600083018461091a565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f682610c1f565b9150610a0183610c1f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3657610a35610cbe565b5b828201905092915050565b6000610a4c82610c1f565b9150610a5783610c1f565b925082610a6757610a66610ced565b5b828204905092915050565b6000610a7d82610bf5565b9150610a8883610bf5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac757610ac6610cbe565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0457610b03610cbe565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b4157610b40610cbe565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7e57610b7d610cbe565b5b828202905092915050565b6000610b9482610c1f565b9150610b9f83610c1f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd857610bd7610cbe565b5b828202905092915050565b6000610bee82610bff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4a82610c51565b9050919050565b6000610c5c82610c63565b9050919050565b6000610c6e82610bff565b9050919050565b6000610c8082610c1f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb357610cb2610cbe565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b610ddd81610be3565b8114610de857600080fd5b50565b610df481610bf5565b8114610dff57600080fd5b50565b610e0b81610c1f565b8114610e1657600080fd5b50565b610e2281610c29565b8114610e2d57600080fd5b5056fea2646970667358221220c59c2fe9df0d72474043bf476357161a53b9efc68561b1c7a3a300449eb7b66d64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107be565b6102e4565b6040516100c191906109b4565b60405180910390f35b3480156100d657600080fd5b506100df6102fc565b005b3480156100ed57600080fd5b506100f661053c565b60405161010391906109b4565b60405180910390f35b34801561011857600080fd5b50610121610549565b60405161012e9190610959565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661056f565b604051610163919061093e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107eb565b610593565b6040516101a0919061093e565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d290919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610994565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109eb565b92505081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610381576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042c5760008082815481106103a6576103a5610d1c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042490610c75565b915050610384565b50600067ffffffffffffffff81111561044857610447610d4b565b5b6040519080825280602002602001820160405280156104765781602001602082028036833780820191505090505b506000908051906020019061048c9291906106ae565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b390610929565b60006040518083038185875af1925050503d80600081146104f0576040519150601f19603f3d011682016040523d82523d6000602084013e6104f5565b606091505b5050905080610539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053090610974565b60405180910390fd5b50565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105de8361060e565b90506000670de0b6b3a764000085836105f79190610b89565b6106019190610a41565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065757600080fd5b505afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190610818565b5050509150506402540be400816106a69190610a72565b915050919050565b828054828255906000526020600020908101928215610727579160200282015b828111156107265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ce565b5b5090506107349190610738565b5090565b5b80821115610751576000816000905550600101610739565b5090565b60008135905061076481610dd4565b92915050565b60008151905061077981610deb565b92915050565b60008135905061078e81610e02565b92915050565b6000815190506107a381610e02565b92915050565b6000815190506107b881610e19565b92915050565b6000602082840312156107d4576107d3610d7a565b5b60006107e284828501610755565b91505092915050565b60006020828403121561080157610800610d7a565b5b600061080f8482850161077f565b91505092915050565b600080600080600060a0868803121561083457610833610d7a565b5b6000610842888289016107a9565b95505060206108538882890161076a565b945050604061086488828901610794565b935050606061087588828901610794565b9250506080610886888289016107a9565b9150509295509295909350565b61089c81610be3565b82525050565b6108ab81610c3f565b82525050565b60006108be600b836109da565b91506108c982610d7f565b602082019050919050565b60006108e16000836109cf565b91506108ec82610da8565b600082019050919050565b60006109046013836109da565b915061090f82610dab565b602082019050919050565b61092381610c1f565b82525050565b6000610934826108d4565b9150819050919050565b60006020820190506109536000830184610893565b92915050565b600060208201905061096e60008301846108a2565b92915050565b6000602082019050818103600083015261098d816108b1565b9050919050565b600060208201905081810360008301526109ad816108f7565b9050919050565b60006020820190506109c9600083018461091a565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f682610c1f565b9150610a0183610c1f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3657610a35610cbe565b5b828201905092915050565b6000610a4c82610c1f565b9150610a5783610c1f565b925082610a6757610a66610ced565b5b828204905092915050565b6000610a7d82610bf5565b9150610a8883610bf5565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac757610ac6610cbe565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0457610b03610cbe565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b4157610b40610cbe565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7e57610b7d610cbe565b5b828202905092915050565b6000610b9482610c1f565b9150610b9f83610c1f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd857610bd7610cbe565b5b828202905092915050565b6000610bee82610bff565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4a82610c51565b9050919050565b6000610c5c82610c63565b9050919050565b6000610c6e82610bff565b9050919050565b6000610c8082610c1f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb357610cb2610cbe565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b610ddd81610be3565b8114610de857600080fd5b50565b610df481610bf5565b8114610dff57600080fd5b50565b610e0b81610c1f565b8114610e1657600080fd5b50565b610e2281610c29565b8114610e2d57600080fd5b5056fea2646970667358221220c59c2fe9df0d72474043bf476357161a53b9efc68561b1c7a3a300449eb7b66d64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}